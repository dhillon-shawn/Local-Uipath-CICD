name: "Pre-check"
description: "Decide target_env, sha, rc_tag, pr_num"
outputs:
  target_env:
    value: ${{ steps.decide.outputs.target_env }}
    description: ""
  sha:
    value: ${{ steps.decide.outputs.sha }}
    description: ""
  rc_tag:
    value: ${{ steps.decide.outputs.rc_tag }}
    description: ""
  pr_num:
    value: ${{ steps.decide.outputs.pr_num }}
    description: ""
runs:
  using: "composite"
  steps:
    - id: decide
      uses: actions/github-script@v7
      with:
        script: |
          const out = { target_env: '', sha: '', rc_tag: '', pr_num: '' };

          const branchFromRef = (ref) => (ref || '').replace('refs/heads/','');
          const isFeature = (ref) => branchFromRef(ref).startsWith('feature/');
          const isHotfix  = (ref) => branchFromRef(ref).startsWith('hotfix/');

          if (context.eventName === 'push') {
            const branch = branchFromRef(process.env.GITHUB_REF);
            const { owner, repo } = context.repo;
            const prs = await github.paginate(github.rest.pulls.list, {
              owner, repo, state: 'open', head: `${owner}:${branch}`
            });
            const pr = prs.find(p => !p.draft);

            if (pr) {
              out.target_env = 'test';
              out.sha = context.sha;
              out.pr_num = String(pr.number);
              out.rc_tag = `rc-pr-${out.pr_num}`;
            } else {
              out.target_env = 'dev';
              out.sha = context.sha;
            }
          }

          if (context.eventName === 'pull_request') {
            const pr = context.payload.pull_request;
            const headRef = pr.head.ref;

            if (context.payload.action === 'ready_for_review') {
              out.target_env = 'test';
              out.sha = pr.head.sha;
              out.pr_num = String(pr.number);
              out.rc_tag = `rc-pr-${out.pr_num}`;
            }

            if (context.payload.action === 'closed') {
              if (!pr.merged) {
                out.target_env = '';
              } else if (isFeature(`refs/heads/${headRef}`)) {
                out.target_env = 'prod';
                out.sha = ''; // pipeline will fetch RC by tag
                out.pr_num = String(pr.number);
                out.rc_tag = `rc-pr-${out.pr_num}`;
              } else if (isHotfix(`refs/heads/${headRef}`)) {
                out.target_env = 'hotfix';
                out.sha = context.payload.pull_request.merge_commit_sha || '';
              } else {
                out.target_env = '';
              }
            }
          }

          core.setOutput('target_env', out.target_env);
          core.setOutput('sha', out.sha);
          core.setOutput('rc_tag', out.rc_tag);
          core.setOutput('pr_num', out.pr_num);

          // Log to the job output
          console.log('pre-check decision:', out);

          // Log to the step summary for easy scan in UI
          const summary = [
            '### Pre-check decision',
            `- event: \`${context.eventName}\` / action: \`${context.payload?.action || ''}\``,
            `- target_env: \`${out.target_env}\``,
            `- sha: \`${out.sha}\``,
            `- pr_num: \`${out.pr_num}\``,
            `- rc_tag: \`${out.rc_tag}\``,
          ].join('\n');
          await core.summary.addRaw(summary).write();

