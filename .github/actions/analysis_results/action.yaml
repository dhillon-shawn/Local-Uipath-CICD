name: "Format UiPath analyze.json to HTML"
description: "Reads analyze.json (utf-8/utf-16) and renders a clean HTML report"
inputs:
  json_path: { required: true, description: "Path to analyze.json" }
  out_path:  { required: false, default: "./email/analysis-report.html", description: "path to results" }
outputs:
  html:
   value: ${{ steps.render.outputs.html }}
   description: "html test results"
  html_path:
    value: ${{ steps.render.outputs.html_path }}
    description: "Path to html results"

runs:
  using: "composite"
  steps:
    - name: Ensure output dir
      shell: bash
      run: mkdir -p "$(dirname '${{ inputs.out_path }}')"

    - id: render
      uses: actions/github-script@v7
      env:
        IN:  ${{ inputs.json_path }}
        OUT: ${{ inputs.out_path }}
      with:
        script: |
          const fs = require('node:fs');

          function readJsonSmart(p){
            try { return JSON.parse(fs.readFileSync(p,'utf8')); }
            catch {
              // try UTF-16 LE
              const buf = fs.readFileSync(p);
              const txt = buf.toString('utf16le');
              return JSON.parse(txt);
            }
          }
          const data = readJsonSmart(process.env.IN); // expect array of [workflow, description, recommendation]

          const esc = s => String(s).replace(/[&<>]/g, c=>({ '&':'&amp;','<':'&lt;','>':'&gt;'}[c]));
          const linkify = s => String(s).replace(/\[([^\]]+)\]\(([^)]+)\)/g, (_,t,u)=>`<a href="${esc(u)}" target="_blank">${esc(t)}</a>`);

          let html = `<!DOCTYPE html>
            <html><head><meta charset="utf-8"><title>UiPath Analysis Report</title>
            <style>
            body{font-family:Arial,Helvetica,sans-serif;margin:40px;background:#f5f5f5;}
            .container{max-width:900px;margin:0 auto;background:#fff;padding:20px;border-radius:8px;box-shadow:0 2px 10px rgba(0,0,0,0.1);}
            h1{color:#2c3e50;text-align:center;}
            .issue{border-bottom:1px solid #eee;padding:16px 0;}
            .workflow{font-weight:bold;color:#e74c3c;font-size:1.05em;}
            .project{font-weight:bold;color:#f39c12;font-size:1.05em;}
            .description{margin:10px 0;color:#555;}
            .recommendation{background:#f8f9fa;padding:12px;border-left:3px solid #28a745;margin-top:10px;}
            </style>
            </head><body><div class="container">
            <h1>UiPath Analysis Report</h1>
            <p><strong>${data.length} issues found</strong></p>`;

          for (const [workflow, description, recommendation] of data) {
            const name = workflow || "Project Configuration";
            const klass = workflow ? "workflow" : "project";
            html += `
            <div class="issue">
              <div class="${klass}">${esc(name)}</div>
              <div class="description">${esc(description)}</div>
              <div class="recommendation"><strong>Recommendation:</strong> ${linkify(recommendation)}</div>
            </div>`;
          }

          html += `</div></body></html>`;

          fs.writeFileSync(process.env.OUT, html);
          core.setOutput('html', html);
          core.setOutput('html_path', process.env.OUT);
