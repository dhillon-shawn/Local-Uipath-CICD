name: rc-promotion
on:
  workflow_call:
    inputs:
      rc_tag: { type: string, required: true }
      pr_num: { type: string, required: true }
      target_env: { type: string, required: true }
    secrets: {}

env:
  scope: "OR.Assets OR.BackgroundTasks OR.Execution OR.Folders OR.Jobs OR.Machines.Read OR.Monitoring OR.Robots.Read OR.Settings.Read OR.TestSets OR.TestSetExecutions OR.TestSetSchedules OR.Users.Read"

permissions: write-all

jobs:
  setup:
    runs-on: ubuntu-latest
    environment: ${{ inputs.target_env}}
    outputs:
      pid: ${{ steps.setup.outputs.pid }}
      version: ${{ steps.rc.outputs.version }}
      package: ${{ steps.rc.outputs.package }}
      vars: ${{ steps.capture.outputs.vars }}
      email: ${{ steps.setup.outputs.email }}
      skip_ci: ${{ steps.setup.outputs.skip_ci }}
      ptype: ${{ steps.setup.outputs.ptype }}
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha || github.sha }}

      - name: Capture environment and repo vars
        id: capture
        run: |
          echo "vars<<EOF" >> "$GITHUB_OUTPUT"
          echo '${{ toJSON(vars) }}' >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"

      - name: RC Setup
        id: setup
        uses: dhillon-shawn/Local-CICD-UTILS/setup@v0

      - name: RC download/parse
        id: rc
        uses: dhillon-shawn/Local-CICD-UTILS/rc-download@v0
        with:
          rc_tag: ${{ inputs.rc_tag }}


  CLI:
    runs-on: windows-latest
    needs: [setup]
    if: ((  needs.setup.outputs.skip_ci  == 'false')  && inputs.target_env == 'test') && needs.setup.outputs.ptype == 'Process'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: auth
        uses: dhillon-shawn/Local-CICD-UTILS/auth@v0
        with:
          target_env: "test"
          role_arn: ${{ secrets.RPA_UIPATH_CICD_ROLE_ARN }}
          aws_region: "us-west-2"
          secret_id: ${{ secrets.RPA_UIPATH_CICD_SECRET_ARN }}
          scopes: ${{ env.scope }}

      - name: setup uipcli and nuget feed
        uses: dhillon-shawn/Local-CICD-UTILS/uipcli-config@v0

      - name: CI
        id: CI
        uses: dhillon-shawn/Local-CICD-UTILS/ci@v0
        with:
          folder_name: "${{ fromJSON(needs.setup.outputs.vars).FOLDER_NAME }}"
          target_env: "test"
          skip_ci: ${{ needs.setup.outputs.skip_ci}}

  Deploy:
    needs: [setup,  CLI]
    runs-on: ubuntu-latest
    if: ${{ always() && needs.CLI.result != 'failure' && !cancelled() }}
    steps:
      - name: auth
        uses: dhillon-shawn/Local-CICD-UTILS/auth@v0
        with:
          target_env: ${{ inputs.target_env}}
          role_arn: ${{ secrets.RPA_UIPATH_CICD_ROLE_ARN }}
          aws_region: "us-west-2"
          secret_id: ${{ secrets.RPA_UIPATH_CICD_SECRET_ARN }}
          scopes: ${{ env.scope }}

      - name: Deploy
        id: CD
        uses: dhillon-shawn/Local-CICD-UTILS/cd@v0
        with:
          folder_name: "${{ fromJSON(needs.setup.outputs.vars).FOLDER_NAME }}"
          target_env: ${{ inputs.target_env}}
          version: ${{ needs.setup.outputs.version }}
          pid: ${{ needs.setup.outputs.pid }}
          ptype: ${{ needs.setup.outputs.ptype }}

  send:
    needs: [setup,  Deploy]
    if: ${{ always() && !cancelled() }}
    uses: dhillon-shawn/Local-Uipath-CICD/.github/workflows/send-email.yml@main
    secrets: inherit
    with:
      target_env: ${{ inputs.target_env}}
      result: ${{ needs.DEPLOY.result }}
      version: ${{ needs.setup.outputs.version }}
      folder_name: ${{ fromJSON(needs.setup.outputs.vars).FOLDER_NAME }}
      pid: ${{ needs.setup.outputs.pid }}
      email: ${{ needs.setup.outputs.email }}
