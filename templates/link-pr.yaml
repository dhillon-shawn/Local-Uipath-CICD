name: Link PR to issue based on branch name

on:
  pull_request:
    types: [opened, edited, synchronize]

permissions:
  write-all

jobs:
  link-issue:
    if: startsWith(github.head_ref, 'feature/')
    runs-on: ubuntu-latest
    steps:
      - name: Link PR to its issue and enable Auto-merge
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const { owner, repo } = context.repo;


            const defaultBranch = context.payload.repository.default_branch;
            if (pr.base.ref !== defaultBranch) {
              core.info(`Base ${pr.base.ref} != default ${defaultBranch}; skipping.`);
              return;
            }
            if (pr.draft) {
              core.info('PR is draft; skipping for now.');
              return;
            }

            // Require the exact pattern created from issues: feature/<issueNumber>-<slug>
            const m = pr.head.ref.match(/^feature\/(\d+)-/);
            if (!m) {
              core.info(`Branch "${pr.head.ref}" not from issue pattern; skipping.`);
              return;
            }
            const issueNumber = m[1];
            const keywordLine = `Closes #${issueNumber}`;

            // 1) Append the closing keyword to the PR body (idempotent)
            try {
              let body = pr.body || '';
              if (!body.includes(`#${issueNumber}`)) {
                body = body.trim();
                const newBody = body ? `${body}\n\n${keywordLine}` : keywordLine;
                await github.rest.pulls.update({
                  owner,
                  repo,
                  pull_number: pr.number,
                  body: newBody,
                });
                core.info(`Appended "${keywordLine}" to PR body.`);
              } else {
                core.info(`PR already references #${issueNumber}; nothing to do.`);
              }
            } catch (err) {
              core.warning(`Could not update PR body (forks/permissions?): ${err.message}`);
            }

            // 2) Enable Auto-merge (respects required checks & reviews)
            try {
              const pullRequestId = pr.node_id;               // GraphQL node ID
              const method = "SQUASH";                        // or "MERGE" / "REBASE" if allowed
              await github.graphql(`
                mutation EnableAutoMerge($id: ID!, $method: PullRequestMergeMethod!) {
                  enablePullRequestAutoMerge(input: {
                    pullRequestId: $id,
                    mergeMethod: $method
                  }) { clientMutationId }
                }
              `, { id: pullRequestId, method });
              core.info(`Auto-merge enabled for PR #${pr.number} (${method}).`);
            } catch (err) {
              core.warning(`Could not enable auto-merge (setting/perms?): ${err.message}`);
            }
